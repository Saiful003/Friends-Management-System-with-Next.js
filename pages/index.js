import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { BiPlus } from "react-icons/bi";
import Card from "../components/Card";
import Container from "../components/Container";
import { useSession } from "next-auth/react";
import customAxios from "../config/axios";
import Button from "../components/Button";

const Home = () => {
  const [totalFriends, setTotalFriends] = useState([]);
  const [filteredBy, setFilteredBy] = useState("male");
  const { status } = useSession();
  const router = useRouter();

  useEffect(() => {
    const getFriends = async () => {
      const {
        data: { message: friends },
      } = await customAxios.get(`/?gender=${filteredBy}`);
      setTotalFriends(friends);
    };
    getFriends();
  }, [filteredBy]);

  const deleteFriend = async (id) => {
    await customAxios.delete(`/friends/${id}`);
    setTotalFriends((prevFriends) =>
      prevFriends.filter((friend) => friend._id !== id)
    );
  };

  if (status === "unauthenticated") {
    router.push("/login");
    return null;
  }
  return (
    <>
      <Head>
        <title>Learn Supabase - An alternative of firebase</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mt-6">
        <Container>
          <Button
            fill={filteredBy === "male"}
            onClick={() => setFilteredBy("male")}
          >
            Male
          </Button>
          <Button
            fill={filteredBy === "female"}
            onClick={() => setFilteredBy("female")}
          >
            Female
          </Button>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3 mt-4">
            {totalFriends.map((singleFriend) => (
              <Card
                key={singleFriend._id}
                name={singleFriend.name}
                age={singleFriend.age}
                id={singleFriend._id}
                introduceBy={singleFriend.introduceBy}
                profession={singleFriend.profession}
                image={singleFriend.image}
                gender={singleFriend.gender}
                onClick={deleteFriend}
              />
            ))}

            <div
              className={`p-3  ${
                totalFriends.length && "flex items-center justify-center"
              } `}
            >
              {!totalFriends.length && (
                <div className="text-center">
                  <h2 className="text-xl font-medium mb-4">
                    You have no {filteredBy} friend list yet now! Please Create
                    new {filteredBy} friend.
                  </h2>
                </div>
              )}
              <Link href="/create">
                <div className="w-12 aspect-square rounded-full flex items-center justify-center mx-auto cursor-pointer bg-emerald-400 hover:bg-emerald-500 shadow-lg">
                  <BiPlus className="text-4xl text-white" />
                </div>
              </Link>
            </div>
          </div>
          <div>{/* pagination component  */}</div>
        </Container>
      </div>
    </>
  );
};

export default Home;
